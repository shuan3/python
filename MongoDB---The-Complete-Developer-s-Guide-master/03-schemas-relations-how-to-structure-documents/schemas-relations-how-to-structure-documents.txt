> db.companies.insertOne({name: "Freash Apples Inc", isStartup: true, employees: 33, funding: 123456789876543219, details: {cea: "Mark Super"},tags: [{title: "super"},{title: "perfect"}], foundingData: new Date(), insertedAt: new Timestamp()})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f13ec400249b11a6aa5e37f")
}
> db.companies.find()
{ "_id" : ObjectId("5f13ec400249b11a6aa5e37f"), "name" : "Freash Apples Inc", "isStartup" : true, "employees" : 33, "funding" : 123456789876543220, "details" : { "cea" : "Mark Super" }, "tags" : [ { "title" : "super" }, { "title" : "perfect" } ], "foundingData" : ISODate("2020-07-19T06:46:24.175Z"), "insertedAt" : Timestamp(1595141184, 1) }
> db.companies.find().pretty()
{
	"_id" : ObjectId("5f13ec400249b11a6aa5e37f"),
	"name" : "Freash Apples Inc",
	"isStartup" : true,
	"employees" : 33,
	"funding" : 123456789876543220,
	"details" : {
		"cea" : "Mark Super"
	},
	"tags" : [
		{
			"title" : "super"
		},
		{
			"title" : "perfect"
		}
	],
	"foundingData" : ISODate("2020-07-19T06:46:24.175Z"),
	"insertedAt" : Timestamp(1595141184, 1)
}

--------------------get the statistics of database--------------------------
> db.numbers.insertOne({a: 1})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f13ed5a0249b11a6aa5e380")
}
> db.numbers.findOne()
{ "_id" : ObjectId("5f13ed5a0249b11a6aa5e380"), "a" : 1 }
> db.stats
function (scale) {
        return this.runCommand({dbstats: 1, scale: scale});
    }
> db.stats()
{
	"db" : "companyData",
	"collections" : 2,
	"views" : 0,
	"objects" : 2,
	"avgObjSize" : 135,
	"dataSize" : 270,
	"storageSize" : 20480,
	"numExtents" : 0,
	"indexes" : 2,
	"indexSize" : 20480,
	"fsUsedSize" : 54183743488,
	"fsTotalSize" : 61754699776,
	"ok" : 1
}

// differentiate data size
> db.numbers.insertOne({a: 1})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f13eee00249b11a6aa5e381")
}
> db.stats()
{
	"db" : "companyData",
	"collections" : 1,
	"views" : 0,
	"objects" : 1,
	"avgObjSize" : 33,
	"dataSize" : 33,
	"storageSize" : 4096,
	"numExtents" : 0,
	"indexes" : 1,
	"indexSize" : 4096,
	"fsUsedSize" : 54183714816,
	"fsTotalSize" : 61754699776,
	"ok" : 1
}

> db.numbers.drop()
true
> db.numbers.insertOne({a: NumberInt(1)})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f13ef440249b11a6aa5e382")
}
> db.stats()
{
	"db" : "companyData",
	"collections" : 1,
	"views" : 0,
	"objects" : 1,
	"avgObjSize" : 29,
	"dataSize" : 29,
	"storageSize" : 4096,
	"numExtents" : 0,
	"indexes" : 1,
	"indexSize" : 4096,
	"fsUsedSize" : 54183739392,
	"fsTotalSize" : 61754699776,
	"ok" : 1
}

---------------getting the datatype----------------

> db.numbers.insertOne({a: 1.5,b: "r"})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f13f19e0249b11a6aa5e386")
}
> typeof db.numbers.findOne({b: "r"}).a
number

----------------------------Relations---------------------
one-to-one
one-to-many
many-to-many

--------------------------Joining with $lookup--------------------

> use bookStore
switched to db bookStore
> cls

> db.authors.insertMany([{name: 'Max Scwarz',age: 29, address:{street: 'Main'}},{name: 'Manuel Lor',age: 30, address:{street: 'Tree'}}])
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("5f145a7c231893e15e9e53fe"),
		ObjectId("5f145a7c231893e15e9e53ff")
	]
}
> db.authors.find().pretty()
{
	"_id" : ObjectId("5f145a7c231893e15e9e53fe"),
	"name" : "Max Scwarz",
	"age" : 29,
	"address" : {
		"street" : "Main"
	}
}
{
	"_id" : ObjectId("5f145a7c231893e15e9e53ff"),
	"name" : "Manuel Lor",
	"age" : 30,
	"address" : {
		"street" : "Tree"
	}
}
> db.books.insertOne({name: 'My favorite Book',authors:[ObjectId("5f145a7c231893e15e9e53fe"),ObjectId("5f145a7c231893e15e9e53ff")]})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f145b5f231893e15e9e5400")
}
> db.authors.findOne()
{
	"_id" : ObjectId("5f145a7c231893e15e9e53fe"),
	"name" : "Max Scwarz",
	"age" : 29,
	"address" : {
		"street" : "Main"
	}
}
> db.books.findOne()
{
	"_id" : ObjectId("5f145b5f231893e15e9e5400"),
	"name" : "My favorite Book",
	"authors" : [
		ObjectId("5f145a7c231893e15e9e53fe"),
		ObjectId("5f145a7c231893e15e9e53ff")
	]
}


> db.books.aggregate([{$lookup:{from: 'authors',localField:'authors',foreignField:"_id", as:'creators'}}])
{ "_id" : ObjectId("5f145b5f231893e15e9e5400"), "name" : "My favorite Book", "authors" : [ ObjectId("5f145a7c231893e15e9e53fe"), ObjectId("5f145a7c231893e15e9e53ff") ], "creators" : [ { "_id" : ObjectId("5f145a7c231893e15e9e53fe"), "name" : "Max Scwarz", "age" : 29, "address" : { "street" : "Main" } }, { "_id" : ObjectId("5f145a7c231893e15e9e53ff"), "name" : "Manuel Lor", "age" : 30, "address" : { "street" : "Tree" } } ] }
> db.books.aggregate([{$lookup:{from: 'authors',localField:'authors',foreignField:"_id", as:'creators'}}]).pretty()
{
	"_id" : ObjectId("5f145b5f231893e15e9e5400"),
	"name" : "My favorite Book",
	"authors" : [
		ObjectId("5f145a7c231893e15e9e53fe"),
		ObjectId("5f145a7c231893e15e9e53ff")
	],
	"creators" : [
		{
			"_id" : ObjectId("5f145a7c231893e15e9e53fe"),
			"name" : "Max Scwarz",
			"age" : 29,
			"address" : {
				"street" : "Main"
			}
		},
		{
			"_id" : ObjectId("5f145a7c231893e15e9e53ff"),
			"name" : "Manuel Lor",
			"age" : 30,
			"address" : {
				"street" : "Tree"
			}
		}
	]
}

> db.books.find().pretty()
{
	"_id" : ObjectId("5f145b5f231893e15e9e5400"),
	"name" : "My favorite Book",
	"authors" : [
		ObjectId("5f145a7c231893e15e9e53fe"),
		ObjectId("5f145a7c231893e15e9e53ff")
	]
}
