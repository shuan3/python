
--------------------Understanding the ISO Week Year Operator-----------------

// $isoWeekYear retries the year out of date
db.persons.aggregate([
    {
        $project: {
            _id: 0,
            name: 1,
            email: 1,
            birthdate: { $toDate: '$dob.date' },
            age: '$dob.age',
            location: {
                type: 'Point',
                coordinates: [
                    {
                        $convert: {
                            input: '$location.coordinates.longitude',
                            to: 'double',
                            onError: 0.0,
                            onNull: 0.0
                        }
                    },
                    {
                        $convert: {
                            input: '$location.coordinates.latitude',
                            to: 'double',
                            onError: 0.0,
                            onNull: 0.0
                        }
                    }
                ]
            }
        }
    },
    {
        $project: {
            email: 1,
            location: 1,
            gender: 1,
            birthdate: 1,
            age: 1,
            fullName: {
                $concat: [
                    {
                        $toUpper: {
                            $substrCP: ['$name.first', 0, 1]
                        }
                    }, {
                        $substrCP: [
                            '$name.first', 1, {
                                $subtract: [
                                    { $strLenCP: '$name.first' }, 1
                                ]
                            }]
                    },
                    ' ',
                    {
                        $toUpper: {
                            $substrCP: ['$name.last', 0, 1]
                        }
                    },
                    {
                        $substrCP: [
                            '$name.last', 1, {
                                $subtract: [
                                    { $strLenCP: '$name.last' }, 1
                                ]
                            }]
                    }
                ]
            }
        }
    },
    { $group: { _id: { birthYear: { $isoWeekYear: '$birthdate' } }, numPersons: { $sum: 1 } } }
]).pretty()

// adding sort

db.persons.aggregate([
    {
        $project: {
            _id: 0,
            name: 1,
            email: 1,
            birthdate: { $toDate: '$dob.date' },
            age: '$dob.age',
            location: {
                type: 'Point',
                coordinates: [
                    {
                        $convert: {
                            input: '$location.coordinates.longitude',
                            to: 'double',
                            onError: 0.0,
                            onNull: 0.0
                        }
                    },
                    {
                        $convert: {
                            input: '$location.coordinates.latitude',
                            to: 'double',
                            onError: 0.0,
                            onNull: 0.0
                        }
                    }
                ]
            }
        }
    },
    {
        $project: {
            email: 1,
            location: 1,
            gender: 1,
            birthdate: 1,
            age: 1,
            fullName: {
                $concat: [
                    {
                        $toUpper: {
                            $substrCP: ['$name.first', 0, 1]
                        }
                    }, {
                        $substrCP: [
                            '$name.first', 1, {
                                $subtract: [
                                    { $strLenCP: '$name.first' }, 1
                                ]
                            }]
                    },
                    ' ',
                    {
                        $toUpper: {
                            $substrCP: ['$name.last', 0, 1]
                        }
                    },
                    {
                        $substrCP: [
                            '$name.last', 1, {
                                $subtract: [
                                    { $strLenCP: '$name.last' }, 1
                                ]
                            }]
                    }
                ]
            }
        }
    },
    { $group: { _id: { birthYear: { $isoWeekYear: '$birthdate' } }, numPersons: { $sum: 1 } } },
    { $sort: { numPersons: -1}}
]).pretty()

------------------$group vs $project---------------------

$group :
   1. grouping multiple documents into one document.
   2. n:1
   3. have multiple documents and return one grouped by one or more categories.
   4. do things like summing, counting, averaging, build array and so on

$project:
   1. get one document and then will return one document, that one document we'll just have changed.
   2. 1:1
   3. transform a single document, add new fields and so on.
   4. have a one to one relation, include/exclude fields.

-------------Pushing Elements Into Newly Created Arrays-------------------

// push Operator allows to push a new element into the all hobbies array for every incoming document.

> db.friends.aggregate([
...     { $group: { _id: { age: '$age' }, allHobbies: {$push: '$hobbies'}}}
... ]).pretty()
{
	"_id" : {
		"age" : 29
	},
	"allHobbies" : [
		[
			"Sports",
			"Cooking"
		],
		[
			"Cooking",
			"Skiing"
		]
	]
}
{
	"_id" : {
		"age" : 30
	},
	"allHobbies" : [
		[
			"Eating",
			"Data Analytics"
		]
	]
}

---------------Understanding the unwind Stage-------------------

// do not want to insert into  nested array
// The unwind stage is always a great stage when have an array of which want to pull out the elements.

> db.friends.aggregate([
    { $unwind:'$hobbies' }
]).pretty()
// result -> every array element has one document

// now adding group to every document according to age
> db.friends.aggregate([
...     { $unwind: '$hobbies' },
...     { $group: { _id: { age: '$age' }, allHobbies: { $push: '$hobbies' } } }
... ]).pretty()
{
	"_id" : {
		"age" : 29
	},
	"allHobbies" : [
		"Sports",
		"Cooking",
		"Cooking",
		"Skiing"
	]
}
{
	"_id" : {
		"age" : 30
	},
	"allHobbies" : [
		"Eating",
		"Data Analytics"
	]
}
