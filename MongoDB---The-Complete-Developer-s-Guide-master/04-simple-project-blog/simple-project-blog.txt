-------------------Blog Project-------------------

> use blog
switched to db blog
> db.users.insertMany([{name: 'Max Schwaezmuller', age: 29,email:'max23@gmail.com'},{name: 'Raju', age:'22', email: 'mijanur231@gmail.com'}])
{
	"acknowledged" : true,
	"insertedIds" : [
		ObjectId("5f146535231893e15e9e5401"),
		ObjectId("5f146535231893e15e9e5402")
	]
}
> db.users.find().pretty()
{
	"_id" : ObjectId("5f146535231893e15e9e5401"),
	"name" : "Max Schwaezmuller",
	"age" : 29,
	"email" : "max23@gmail.com"
}
{
	"_id" : ObjectId("5f146535231893e15e9e5402"),
	"name" : "Raju",
	"age" : "22",
	"email" : "mijanur231@gmail.com"
}
> db.post.insertOne({title: 'My first post is', text:'This is very important post, I hope you like it!',tags:['new', 'tech'], creator: ObjectId("5f146535231893e15e9e5402"), comments: [{text: 'I like this post', author: ObjectId("5f146535231893e15e9e5401")}]})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f146bba231893e15e9e5403")
}
> db.posts.findOne()
null
> db.post.findOne()
{
	"_id" : ObjectId("5f146bba231893e15e9e5403"),
	"title" : "My first post is",
	"text" : "This is very important post, I hope you like it!",
	"tags" : [
		"new",
		"tech"
	],
	"creator" : ObjectId("5f146535231893e15e9e5402"),
	"comments" : [
		{
			"text" : "I like this post",
			"author" : ObjectId("5f146535231893e15e9e5401")
		}
	]
}

---------------------validation check-----------------------

> db.post.drop()
true
> db.post.findOne()
null
> db.createCollection('post', {
...   validator: {
...     $jsonSchema: {
...       bsonType: 'object',
...       required: ['title', 'text', 'creator', 'comments'],
...       properties: {
...         title: {
...           bsonType: 'string',
...           description: 'must be a string and is required'
...         },
...         text: {
...           bsonType: 'string',
...           description: 'must be a string and is required'
...         },
...         creator: {
...           bsonType: 'objectId',
...           description: 'must be an objectid and is required'
...         },
...         comments: {
...           bsonType: 'array',
...           description: 'must be an array and is required',
...           items: {
...             bsonType: 'object',
...             required: ['text', 'author'],
...             properties: {
...               text: {
...                 bsonType: 'string',
...                 description: 'must be a string and is required'
...               },
...               author: {
...                 bsonType: 'objectId',
...                 description: 'must be an objectid and is required'
...               }
...             }
...           }
...         }
...       }
...     }
...   }
... });
{ "ok" : 1 }
> db.post.insertOne({title: 'My first post is', text:'This is very important post, I hope you like it!',tags:['new', 'tech'], creator: ObjectId("5f146535231893e15e9e5402"), comments: [{text: 'I like this post', author: ObjectId("5f146535231893e15e9e5401")}]})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f148c00231893e15e9e5404")
}
> db.post.findOne()
{
	"_id" : ObjectId("5f148c00231893e15e9e5404"),
	"title" : "My first post is",
	"text" : "This is very important post, I hope you like it!",
	"tags" : [
		"new",
		"tech"
	],
	"creator" : ObjectId("5f146535231893e15e9e5402"),
	"comments" : [
		{
			"text" : "I like this post",
			"author" : ObjectId("5f146535231893e15e9e5401")
		}
	]
}


> db.post.insertOne({title: 'My first post is', text:'This is very important post, I hope you like it!',tags:['new', 'tech'], creator: ObjectId("5f146535231893e15e9e5402"), comments: [{text: 'I like this post', author:1234}]})
2020-07-20T00:12:38.402+0600 E QUERY    [thread1] WriteError: Document failed validation :
WriteError({
	"index" : 0,
	"code" : 121,
	"errmsg" : "Document failed validation",
	"op" : {
		"_id" : ObjectId("5f148d16231893e15e9e5406"),
		"title" : "My first post is",
		"text" : "This is very important post, I hope you like it!",
		"tags" : [
			"new",
			"tech"
		],
		"creator" : ObjectId("5f146535231893e15e9e5402"),
		"comments" : [
			{
				"text" : "I like this post",
				"author" : 1234
			}
		]
	}
})
WriteError@src/mongo/shell/bulk_api.js:466:48
Bulk/mergeBatchResults@src/mongo/shell/bulk_api.js:846:49
Bulk/executeBatch@src/mongo/shell/bulk_api.js:910:13
Bulk/this.execute@src/mongo/shell/bulk_api.js:1154:21
DBCollection.prototype.insertOne@src/mongo/shell/crud_api.js:252:9
@(shell):1:1

> db.post.find().pretty()
{
	"_id" : ObjectId("5f148d87231893e15e9e5407"),
	"title" : "My first post is",
	"text" : "This is very important post, I hope you like it!",
	"tags" : [
		"new",
		"tech"
	],
	"creator" : ObjectId("5f146535231893e15e9e5402"),
	"comments" : [
		{
			"text" : "I like this post",
			"author" : ObjectId("5f146535231893e15e9e5401")
		}
	]
}

------------------------administrative check-------------------------
// collMod -> collections mode

> db.runCommand({collMod: 'post', validator: {
...     $jsonSchema: {
...       bsonType: 'object',
...       required: ['title', 'text', 'creator', 'comments'],
...       properties: {
...         title: {
...           bsonType: 'string',
...           description: 'must be a string and is required'
...         },
...         text: {
...           bsonType: 'string',
...           description: 'must be a string and is required'
...         },
...         creator: {
...           bsonType: 'objectId',
...           description: 'must be an objectid and is required'
...         },
...         comments: {
...           bsonType: 'array',
...           description: 'must be an array and is required',
...           items: {
...             bsonType: 'object',
...             required: ['text', 'author'],
...             properties: {
...               text: {
...                 bsonType: 'string',
...                 description: 'must be a string and is required'
...               },
...               author: {
...                 bsonType: 'objectId',
...                 description: 'must be an objectid and is required'
...               }
...             }
...           }
...         }
...       }
...     }
...   }})
{ "ok" : 1 }


> db.runCommand({
  collMod: 'posts',
  validator: {
    $jsonSchema: {
      bsonType: 'object',
      required: ['title', 'text', 'creator', 'comments'],
      properties: {
        title: {
          bsonType: 'string',
          description: 'must be a string and is required'
        },
        text: {
          bsonType: 'string',
          description: 'must be a string and is required'
        },
        creator: {
          bsonType: 'objectId',
          description: 'must be an objectid and is required'
        },
        comments: {
          bsonType: 'array',
          description: 'must be an array and is required',
          items: {
            bsonType: 'object',
            required: ['text', 'author'],
            properties: {
              text: {
                bsonType: 'string',
                description: 'must be a string and is required'
              },
              author: {
                bsonType: 'objectId',
                description: 'must be an objectid and is required'
              }
            }
          }
        }
      }
    }
  },
  validationAction: 'warn'
});
{ "ok" : 1 }
> db.post.insertOne({title: 'My first post is', text:'This is very important post, I hope you like it!',tags:['new', 'tech'], creator: ObjectId("5f146535231893e15e9e5402"), comments: [{text: 'I like this post', author:1234}]})
{
	"acknowledged" : true,
	"insertedId" : ObjectId("5f14930f231893e15e9e5409")
