// Definitions
/**
 * # store data as documents like JavaScript Object
   # noSQL database
   # store like JSON
   # BSON (b-> binary) Data Structure into server
 */


 No Schema!
 User Collection
 id: 1 "name": "Raju" "age": 22  ...

/**
Relations
No / Few Relations
#Relational Data needs to be merger manually-- > kind of

#flow
 1. Database
 2. Collections (like tables)
 3. Documents(like JSON Object values)-these are schemaless

#MongoDB Ecosystem

MongoDB Database
1. Self - Managed / Enterprise     2. Atlas(Cloud)      3. Mobile
          |
          |
  CloudManager / OpsManager
// other options
1. Compass
2. BI Connectors
3. MongoDb Charts
 */

 Stich --> Basically a serverless backend solution
 This gives  :
  1. serverless query api -> a tool sets or tools to directly database query from inside client apps.
  2. Server Functions(in the cloud-> related to js)-> like  google cloud function or AWS Lamda.
  3. Database Triggers -> that allows us to events in a database, like document was inserted and then
     execute a function in  response to that and that function could then maybe send an e-mail.
  4. Real-Time Sync -> basically is built to synchronize a database in a cloud with that mobile offline supporting database.

Working with MongoDb
Backend Server -> Drivers(Node.js, Java, Python) or MongoDb Shell->(queries)<->(communicate) MongoDb Server->Storage Engine(File/Data Access)

               | Read + Write Data to Files(slow) ->when Database
Storage Engine |
               | Read + Write Data to Files(fast) ->when Memory

# documents created implicity


JSON data converts into BSON data

{
  "name" : "MAX",
  "age" : 29
}

it converts into BSON

BSON 1. Binary data 2. Extends JSON Types(e.g more detailed Number Types) 3. Efficient Storage
